pipeline {
  agent any

  environment {
    DOCKERHUB_CREDENTIALS = credentials('docker-hub-creds')
    DOCKERHUB_IMAGE = 'emadas/smart-retail-backend'
    K8S_DEPLOYMENT = 'backend-deployment'
    K8S_NAMESPACE = 'default'
    TAG = "v${env.BUILD_NUMBER}" // ✅ FIXED: Define TAG safely
  }

  options {
    skipDefaultCheckout true
    buildDiscarder(logRotator(numToKeepStr: '10'))
  }

  stages {
    stage('📥 Checkout') {
      steps {
        checkout scm
      }
    }

    stage('🧹 Lint + ✅ Test') {
      steps {
        echo "Running lint and test..."
        // Add actual test commands here
      }
    }

    stage('🐳 Build & Push Image') {
      steps {
        script {
          docker.withRegistry('', DOCKERHUB_CREDENTIALS) {
            def app = docker.build("${DOCKERHUB_IMAGE}:${TAG}")
            app.push()
          }
        }
      }
    }

    stage('✏️ Update K8s Deployment') {
      steps {
        sh "kubectl set image deployment/${K8S_DEPLOYMENT} backend=${DOCKERHUB_IMAGE}:${TAG} -n ${K8S_NAMESPACE}"
      }
    }

    stage('🚀 Deploy to Kubernetes') {
      steps {
        sh "kubectl rollout restart deployment/${K8S_DEPLOYMENT} -n ${K8S_NAMESPACE}"
      }
    }

    stage('🔍 Health Check') {
      steps {
        sh "kubectl rollout status deployment/${K8S_DEPLOYMENT} -n ${K8S_NAMESPACE}"
      }
    }
  }

  post {
    success {
      slackSend color: 'good', message: "✅ Deployment succeeded for TAG ${TAG}"
    }
    failure {
      slackSend color: 'danger', message: "🚨 Deployment failed for TAG ${TAG}"
    }
  }
}
